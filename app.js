'use strict';

const Homey = require('homey');
const ESPEasyUnits = require('./lib/ESPEasyUnits.js');

class ESPEasy extends Homey.App {

    onInit() {
        if (process.env.DEBUG === '1') {
            require('inspector').open(9222, '0.0.0.0', true);
        }

        this.triggers = {};
        this.actions = {};
        this.units = new ESPEasyUnits();
        this.log('App started');

        process.on('unhandledRejection', (reason, p) => {
            this.log("Unhandled Rejection at:", p);
            this.log("Rejection reason:", reason);
            this.log("Rejection stack:", reason.stack);
        });
    }

    getI18nString(i18n) {
        const lang = Homey.ManagerI18n.getLanguage();
        if (i18n[lang])
            return i18n[lang];
        else
            return i18n['en'];
    }

    // This was a re-implementation of Homeylib.getCapability to include custom capabilities
    // I removed Homeylib alltogether to reduce dependencies
    getCapability(capability) {
        return this.getCapabilities()[capability];
    }

    // This was a re-implementation of Homeylib.getCapabilities to include custom capabilities
    // I removed Homeylib alltogether to reduce dependencies
    // The list in lib/allCapabilities.json is generated by tools/create-capabilitylist.sh
    // The data source is still HomeyLib
    // Note: Only properties 'title', 'type', 'getable', 'setable', 'min', 'max' and 'uiComponent' are included
    getCapabilities() {
        const defaultCapabilities = require("/lib/allCapabilities.json");
        const customCapabilities = require("/app.json")["capabilities"];

        return {
            ...defaultCapabilities,
            ...customCapabilities
        };
    }
}

module.exports = ESPEasy;